[General]
network = TSNExpand2
debug-on-errors = true
result-dir = result_TSNExpand2
sim-time-limit = 1s
record-eventlog = true
# debug
**.displayAddresses = true
**.verbose = true

# MAC Addresses
**.PLC1.eth[*].address = "00:00:00:00:00:01"
**.workstation.eth[*].address = "00:00:00:00:00:02"
**.PLC2.eth[*].address = "00-00-00-00-00-03"
**.driver1.eth[*].address = "00-00-00-00-00-11"
**.server.eth[*].address = "00-00-00-00-00-12"
**.driver2.eth[*].address = "00-00-00-00-00-13"
**.dataServer.eth[*].address = "00-00-00-00-00-23"
**.engineerStation.eth[*].address = "00-00-00-00-00-21"
**.operatorStation.eth[*].address = "00-00-00-00-00-22"
**.videoCamera.eth[*].address = "00-00-00-00-00-31"
**.videoSurveillanceServer.eth[*].address = "00-00-00-00-00-32"
**.monitoringWorkstation.eth[*].address = "00-00-00-00-00-33"
**.AH1.eth[*].address = "00-00-00-00-00-41"
**.AH2.eth[*].address = "00-00-00-00-00-42"

# SwitchesProcessingDelay
**.TSNswitch*.processingDelay.delay = 0us

#how to distinguish different switch
**.filteringDatabase.database = xmldoc("xml/TSNRouting.xml", "/filteringDatabases/") 

#门控列表读入
#**.TSNswitch1.eth[2].queue.gateController.initialSchedule = xmldoc("xml/PortScheduling.xml", "/schedules/switch[@name='TSNswitch1']/port[@id='2']/schedule")
#**.TSNswitch2.eth[2].queue.gateController.initialSchedule = xmldoc("xml/PortScheduling.xml", "/schedules/switch[@name='TSNswitch2']/port[@id='2']/schedule")
#**.TSNswitch2.eth[3].queue.gateController.initialSchedule = xmldoc("xml/PortScheduling.xml", "/schedules/switch[@name='TSNswitch2']/port[@id='3']/schedule")
#**.TSNswitch3.eth[1].queue.gateController.initialSchedule = xmldoc("xml/PortScheduling.xml", "/schedules/switch[@name='TSNswitch3']/port[@id='1']/schedule")
#**.TSNswitch4.eth[1].queue.gateController.initialSchedule = xmldoc("xml/PortScheduling.xml", "/schedules/switch[@name='TSNswitch4']/port[@id='1']/schedule")

**.TSNswitch*.eth[*].queue.numberOfQueues = 8
**.TSNswitch*.eth[*].queue.tsAlgorithms[0].typename = "StrictPriority"
**.TSNswitch*.eth[*].queue.tsAlgorithms[1].typename = "StrictPriority"
**.TSNswitch*.eth[*].queue.tsAlgorithms[2].typename = "StrictPriority"
**.TSNswitch*.eth[*].queue.tsAlgorithms[3].typename = "StrictPriority"
**.TSNswitch*.eth[*].queue.tsAlgorithms[4].typename = "StrictPriority"
**.TSNswitch*.eth[*].queue.tsAlgorithms[5].typename = "StrictPriority"
**.TSNswitch*.eth[*].queue.tsAlgorithms[6].typename = "StrictPriority"
**.TSNswitch*.eth[*].queue.tsAlgorithms[7].typename = "StrictPriority"

**.queues[*].bufferCapacity = 363360b

#禁用长度感知队列，禁用后在gate关闭之前到达就会传输，如果该值为true，则在gate关闭之前frame无法传输完毕则不允许传输
**.TSNswitch*.eth[*].queue.tGates[*].lengthAwareSchedulingEnabled = false

#添加帧抢占*******
#添加expressQueue
**.TSNswitch*.eth[*].queue.queues[0].expressQueue = false
**.TSNswitch*.eth[*].queue.queues[1].expressQueue = false
**.TSNswitch*.eth[*].queue.queues[2].expressQueue = true
**.TSNswitch*.eth[*].queue.queues[3].expressQueue = true
**.TSNswitch*.eth[*].queue.queues[4].expressQueue = true
**.TSNswitch*.eth[*].queue.queues[5].expressQueue = true
**.TSNswitch*.eth[*].queue.queues[6].expressQueue = true
**.TSNswitch*.eth[*].queue.queues[7].expressQueue = true

**.TSNswitch*.eth[*].mac.enablePreemptingFrames = true

**.TSNswitch*.eth[*].queue.gateController.enableHoldAndRelease = false

#过滤模块
**.switch*.eth[*].safe.typename = "PassThrough"
**.driver*.eth[*].safe.typename = "PassThrough"


#安全策略
**.workstation.digauthen[0].typename = "PassThrough"
**.workstation.crypt[0].typename = "PassThrough"
**.server.digauthen[0].typename = "PassThrough"
**.server*.crypt[0].typename = "PassThrough"


**.PLC1.digauthen[0].typename = "PassThrough"
#**.PLC1.crypt[0].typename = "Crypt"
**.PLC1.crypt[0].typename = "PassThrough"
**.driver1.digauthen[0].typename = "PassThrough"
#**.driver1.crypt[0].typename = "Crypt"
**.driver1.crypt[0].typename = "PassThrough"

#**.PLC2.digauthen[0].typename = "PassThrough"
#**.PLC2.crypt[0].typename = "PassThrough"
#**.driver2.digauthen[0].typename = "PassThrough"
#**.driver2.crypt[0].typename = "PassThrough"
**.PLC2.digauthen[0].typename = "DigAuthen"
**.PLC2.crypt[0].typename = "PassThrough"
**.driver2.digauthen[0].typename = "DigAuthen"
**.driver2.crypt[0].typename = "PassThrough"


#enigeerStation-PLC2
**.engineerStation.digauthen[0].typename = "PassThrough"
**.engineerStation.crypt[0].typename = "PassThrough"
**.PLC2.digauthen[1].typename = "PassThrough"
**.PLC2.crypt[1].typename = "PassThrough"
#operatorStation-PLC2
**.operatorStation.digauthen[0].typename = "PassThrough"
**.operatorStation.crypt[0].typename = "PassThrough"
**.PLC2.digauthen[2].typename = "PassThrough"
**.PLC2.crypt[2].typename = "PassThrough"


#**.PLC*.crypt[*].encodedBefore = "false"#在签名时编码数据则该值为true

#PLC1
**.PLC1.hasUdp = true
**.PLC1.hasIpv4 = true
**.PLC1.numApps = 1
**.PLC1.app[0].typename = "UdpBasicApp"
**.PLC1.app[0].destAddresses = "driver1"
**.PLC1.app[0].localPort = 1000
**.PLC1.app[0].packetName = "UdpPingPLC1"
**.PLC1.app[0].destPort = 2000
**.PLC1.app[0].messageLength = 400Byte
**.PLC1.app[0].startTime=100us
**.PLC1.app[0].sendInterval = 0.5ms
#**.PLC1.app[0].dontFragment = true
**.PLC1.eth[*].VEncap.pcp=6
**.PLC1.crypt[0].en_decodeType="RSA"

#workstation
**.workstation.hasUdp = true
**.workstation.hasIpv4 = true
**.workstation.numApps = 1
**.workstation.app[0].typename = "UdpBasicApp"
**.workstation.app[0].destAddresses = "server"
**.workstation.app[0].localPort = 1000
**.workstation.app[0].packetName = "UdpPingPLC2"
**.workstation.app[0].destPort = 2000
**.workstation.app[0].messageLength = 1000Byte
**.workstation.app[0].startTime=200us
**.workstation.app[0].sendInterval = 0.1ms
#**.workstation.app[0].dontFragment = true

**.workstation.eth[*].VEncap.pcp=0
#PLC2
**.PLC2.hasUdp = true
**.PLC2.hasIpv4 = true
#app[0]
**.PLC2.numApps = 3
**.PLC2.app[0].typename = "UdpBasicApp"
**.PLC2.app[0].destAddresses = "driver2"
**.PLC2.app[0].localPort = 1000
**.PLC2.app[0].packetName = "UdpPingPLC3"
**.PLC2.app[0].destPort = 2000
**.PLC2.app[0].messageLength = 400Byte
**.PLC2.app[0].startTime=400us
**.PLC2.app[0].sendInterval = 1.5ms
#**.PLC2.app[0].dontFragment = true
**.PLC2.eth[*].VEncap.pcp=6
#app[1]
**.PLC2.app[1].typename = "UdpSink"
**.PLC2.app[1].localPort=2000

#app[2]
**.PLC2.app[2].typename = "UdpSink"
**.PLC2.app[2].localPort=3000


#drivers
**.driver*.hasUdp = true
**.driver*.hasIpv4 = true
#**.driver*.eth[*].safe.typename = "PacketFiltering"

**.arp.typename = "GlobalArp"

#driver1
**.driver1.numApps = 1
**.driver1.app[0].typename = "UdpSink"
**.driver1.app[0].localPort=2000

#server
**.server.numApps = 1
**.server.app[0].typename = "UdpSink"
**.server.app[0].localPort=2000

#driver2
**.driver2.numApps = 2
**.driver2.app[0].typename = "UdpSink"
**.driver2.app[0].localPort=2000

**.driver2.app[1].typename = "UdpBasicApp"
**.driver2.digauthen[1].typename = "PassThrough"
**.driver2.crypt[1].typename = "PassThrough"
**.driver2.app[1].localPort=1000
**.driver2.app[1].destAddresses="dataServer"
**.driver2.app[1].packetName = "PLC2-dataServer"
**.driver2.app[1].destPort=2000
**.driver2.app[1].messageLength=200Byte
**.driver2.app[1].startTime=0ms
**.driver2.app[1].sendInterval=1.5ms
**.driver2.app[1].dontFragment=true
**.driver2.eth[*].VEncap.pcp=0

#dataServer
**.dataServer.numApps = 1
**.dataServer.app[0].typename = "UdpSink"
**.dataServer.app[0].localPort=2000
**.dataServer.digauthen[0].typename = "PassThrough"
**.dataServer.crypt[0].typename = "PassThrough"
**.dataServer.hasUdp = true
**.dataServer.hasIpv4 = true
**.dataServer.eth[*].safe.typename = "PassThrough"

#engineerStation
**.engineerStation*.hasUdp = true
**.engineerStation*.hasIpv4 = true
**.engineerStation.numApps = 2
#app[0]
**.engineerStation.app[0].typename = "UdpBasicApp"
**.engineerStation.app[0].localPort=1000
**.engineerStation.app[0].destAddresses="PLC2"
**.engineerStation.app[0].packetName = "enigeerStation-PLC2"
**.engineerStation.app[0].destPort=2000
**.engineerStation.app[0].messageLength=500Byte
**.engineerStation.app[0].startTime=0.1ms
**.engineerStation.app[0].sendInterval=3ms
**.engineerStation.app[0].dontFragment=true
#app[1]
**.engineerStation.app[1].typename = "UdpSink"
#**.engineerStation.digauthen[1].typename = "DigAuthen"
**.engineerStation.digauthen[1].typename = "PassThrough"
**.engineerStation.crypt[1].typename = "PassThrough"
**.engineerStation.app[1].localPort=2000
**.engineerStation.eth[*].VEncap.pcp=2

#operatorStation
**.operatorStation*.hasUdp = true
#**.operatorStation*.hasIpv4 = true
**.operatorStation.numApps = 2
#app[0]
**.operatorStation.app[0].typename = "UdpBasicApp"

**.operatorStation.app[0].localPort=1000
**.operatorStation.app[0].destAddresses="PLC2"
**.operatorStation.app[0].packetName = "operatorStation-PLC2"
**.operatorStation.app[0].destPort=3000
**.operatorStation.app[0].messageLength=500Byte
**.operatorStation.app[0].startTime=0.5ms
**.operatorStation.app[0].sendInterval=3ms
**.operatorStation.app[0].dontFragment=true
#app[1]
**.operatorStation.app[1].typename = "UdpSink"
#**.operatorStation.digauthen[1].typename = "DigAuthen"
**.operatorStation.digauthen[1].typename = "PassThrough"
**.operatorStation.crypt[1].typename = "PassThrough"
**.operatorStation.app[1].localPort=2000
**.operatorStation.eth[*].VEncap.pcp=2

#videoCamera
**.videoCamera.hasUdp = true
**.videoCamera.hasIpv4 = true
**.videoCamera.numApps = 1
**.videoCamera.app[0].typename = "UdpBasicApp"
**.videoCamera.digauthen[0].typename = "PassThrough"
**.videoCamera.crypt[0].typename = "PassThrough"
**.videoCamera.app[0].localPort=1000
**.videoCamera.app[0].destAddresses="videoSurveillanceServer"
**.videoCamera.app[0].packetName = "videoCamera-VideoSurServer"
**.videoCamera.app[0].destPort=2000
**.videoCamera.app[0].messageLength=1000Byte
**.videoCamera.app[0].startTime=1ms
**.videoCamera.app[0].sendInterval=5ms
**.videoCamera.app[0].dontFragment=true
**.videoCamera.eth[*].VEncap.pcp=4

#videoSurveillanceServer
**.videoSurveillanceServer.hasUdp = true
**.videoSurveillanceServer.hasIpv4 = true
**.videoSurveillanceServer.numApps = 2
#app[0]
**.videoSurveillanceServer.app[0].typename = "UdpSink"
**.videoSurveillanceServer.app[0].localPort=2000
#**.videoSurveillanceServer.digauthen[0].typename = "DigAuthen"
**.videoSurveillanceServer.digauthen[0].typename = "PassThrough"
**.videoSurveillanceServer.crypt[0].typename = "PassThrough"
**.videoSurveillanceServer.eth[*].safe.typename = "PassThrough"
#app[1]
**.videoSurveillanceServer.app[1].typename = "UdpBasicApp"
**.videoSurveillanceServer.app[1].localPort=1000
#**.videoSurveillanceServer.digauthen[1].typename = "DigAuthen"
**.videoSurveillanceServer.digauthen[1].typename = "PassThrough"
**.videoSurveillanceServer.crypt[1].typename = "PassThrough"
**.videoSurveillanceServer.app[1].destAddresses="monitoringWorkstation"
**.videoSurveillanceServer.app[1].packetName = "VideoSurServer-monitoringWorkstation"
**.videoSurveillanceServer.app[1].destPort=2000
**.videoSurveillanceServer.app[1].messageLength=1200Byte
**.videoSurveillanceServer.app[1].startTime=2ms
**.videoSurveillanceServer.app[1].sendInterval=5ms
**.videoSurveillanceServer.app[1].dontFragment=true
**.videoSurveillanceServer.eth[*].VEncap.pcp=4

#monitoringWorkstation
**.monitoringWorkstation.hasUdp = true
**.monitoringWorkstation.hasIpv4 = true
**.monitoringWorkstation.numApps = 1
**.monitoringWorkstation.app[0].typename = "UdpSink"
**.monitoringWorkstation.app[0].localPort=2000
#**.monitoringWorkstation.digauthen[0].typename = "DigAuthen"
**.monitoringWorkstation.digauthen[0].typename = "PassThrough"
**.monitoringWorkstation.crypt[0].typename = "PassThrough"
**.monitoringWorkstation.eth[*].safe.typename = "PassThrough"

#AH1
**.AH1.hasUdp = true
**.AH1.hasIpv4 = true
**.AH1.numApps = 1
**.AH1.app[0].typename = "UdpBasicApp"
**.AH1.app[0].localPort=1000
#**.AH1.digauthen[0].typename = "DigAuthen"
**.AH1.digauthen[0].typename = "PassThrough"
**.AH1.crypt[0].typename = "PassThrough"
**.AH1.app[0].destAddresses="engineerStation"
**.AH1.app[0].packetName = "AH1-engineerStation"
**.AH1.app[0].destPort=2000
**.AH1.app[0].messageLength=200Byte
**.AH1.app[0].startTime=0.4ms
**.AH1.app[0].sendInterval=3ms
**.AH1.app[0].dontFragment=true
**.AH1.eth[*].safe.typename = "PassThrough"
**.AH1.eth[*].VEncap.pcp=7

#AH2
**.AH2.hasUdp = true
**.AH2.hasIpv4 = true
**.AH2.numApps = 1
**.AH2.app[0].typename = "UdpBasicApp"
**.AH2.app[0].localPort=1000
#**.AH2.digauthen[0].typename = "DigAuthen"
**.AH2.digauthen[0].typename = "PassThrough"
**.AH2.crypt[0].typename = "PassThrough"
**.AH2.app[0].destAddresses="operatorStation"
**.AH2.app[0].packetName = "AH2-engineerStation"
**.AH2.app[0].destPort=2000
**.AH2.app[0].messageLength=200Byte
**.AH2.app[0].startTime=0.4ms
**.AH2.app[0].sendInterval=3ms
**.AH2.app[0].dontFragment=true
**.AH2.eth[*].safe.typename = "PassThrough"
**.AH2.eth[*].VEncap.pcp=7